//
// File generated by rootcint at Wed Feb 13 15:51:37 2002.
// Do NOT change. Changes will be lost next time file is generated
//
#include "Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, RootCaloHit *&obj)
{
   // Read a pointer to an object of class RootCaloHit.

   obj = (RootCaloHit *) buf.ReadObject(RootCaloHit::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, RootData *&obj)
{
   // Read a pointer to an object of class RootData.

   obj = (RootData *) buf.ReadObject(RootData::Class());
   return buf;
}

//______________________________________________________________________________
void R__RootData_data(TBuffer &R__b, void *R__p, int)
{
   TClonesArray &data = *(TClonesArray *)R__p;
   if (R__b.IsReading()) {
      data.Streamer(R__b);
   } else {
      data.Streamer(R__b);
   }
}

//______________________________________________________________________________
void RootData::Streamer(TBuffer &R__b)
{
   // Stream an object of class RootData.

   if (R__b.IsReading()) {
      RootData::Class()->ReadBuffer(R__b, this);
   } else {
      RootData::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void RootData::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class RootData.

   TClass *R__cl  = RootData::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "data", &data);
   data.ShowMembers(R__insp, strcat(R__parent,"data.")); R__parent[R__ncp] = 0;
   R__cl->SetStreamer("data",R__RootData_data);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *RootData::Class_Name()
{
   // Return the class name for RootData.
   return "RootData";
}

// Static variable to hold initialization object
static RootData::R__Init __gR__InitRootData(4);

//______________________________________________________________________________
void RootCaloHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class RootCaloHit.

   if (R__b.IsReading()) {
      RootCaloHit::Class()->ReadBuffer(R__b, this);
   } else {
      RootCaloHit::Class()->WriteBuffer(R__b, this);
   }
}

//______________________________________________________________________________
void RootCaloHit::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class RootCaloHit.

   TClass *R__cl  = RootCaloHit::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "energy", &energy);
   R__insp.Inspect(R__cl, R__parent, "time", &time);
   R__insp.Inspect(R__cl, R__parent, "itra", &itra);
   R__insp.Inspect(R__cl, R__parent, "mycell", (void*)&mycell);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *RootCaloHit::Class_Name()
{
   // Return the class name for RootCaloHit.
   return "RootCaloHit";
}

// Static variable to hold initialization object
static RootCaloHit::R__Init __gR__InitRootCaloHit(4);

/********************************************************
* Dict.cc
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("RootCaloHit.h");
  G__add_compiledheader("RootData.h");
  G__cpp_reset_tagtableDict();
}
class G__DictdOcc_tag {};

void* operator new(size_t size,G__DictdOcc_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__DictdOcc_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_DictdOcc() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RootPCellID */
static int G__RootPCellID_RootPCellID_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   RootPCellID *p=NULL;
   if(G__getaryconstruct()) p=new RootPCellID[G__getaryconstruct()];
   else p=::new((G__DictdOcc_tag*)G__getgvp()) RootPCellID;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__DictLN_RootPCellID);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootPCellID_RootPCellID_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   RootPCellID *p=NULL;
      p=::new((G__DictdOcc_tag*)G__getgvp()) RootPCellID(*(string*)libp->para[0].ref,(unsigned int)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__DictLN_RootPCellID);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootPCellID_RootPCellID_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   RootPCellID *p;
   p=new RootPCellID(*(RootPCellID*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__DictLN_RootPCellID);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RootPCellID G__TRootPCellID;
static int G__RootPCellID_wARootPCellID_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (RootPCellID *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         ((RootPCellID *)((G__getstructoffset())+sizeof(RootPCellID)*i))->~G__TRootPCellID();
   else {
     long G__Xtmp=G__getgvp();
     G__setgvp(G__PVOID);
     ((RootPCellID *)(G__getstructoffset()))->~G__TRootPCellID();
     G__setgvp(G__Xtmp);
     G__operator_delete((void*)G__getstructoffset());
   }
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RootCaloHit */
static int G__RootCaloHit_RootCaloHit_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   RootCaloHit *p=NULL;
   if(G__getaryconstruct()) p=new RootCaloHit[G__getaryconstruct()];
   else                    p=new RootCaloHit;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__DictLN_RootCaloHit);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_RootCaloHit_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   RootCaloHit *p=NULL;
      p = new RootCaloHit(
(float)G__double(libp->para[0]),(float)G__double(libp->para[1])
,(int)G__int(libp->para[2]),*(string*)libp->para[3].ref
,(unsigned int)G__int(libp->para[4]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__DictLN_RootCaloHit);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_Class_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((RootCaloHit*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_Class_Name_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((RootCaloHit*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_Class_Version_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((RootCaloHit*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_Dictionary_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((RootCaloHit*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_IsA_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const RootCaloHit*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_ShowMembers_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((RootCaloHit*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_Streamer_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((RootCaloHit*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_StreamerNVirtual_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((RootCaloHit*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_DeclFileName_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((RootCaloHit*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_DeclFileLine_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((RootCaloHit*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_ImplFileName_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((RootCaloHit*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootCaloHit_ImplFileLine_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((RootCaloHit*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootCaloHit_RootCaloHit_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   RootCaloHit *p;
   p=new RootCaloHit(*(RootCaloHit*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__DictLN_RootCaloHit);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RootCaloHit G__TRootCaloHit;
static int G__RootCaloHit_wARootCaloHit_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (RootCaloHit *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (RootCaloHit *)((G__getstructoffset())+sizeof(RootCaloHit)*i);
   else  delete (RootCaloHit *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RootData */
static int G__RootData_RootData_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   RootData *p=NULL;
   if(G__getaryconstruct()) p=new RootData[G__getaryconstruct()];
   else                    p=new RootData;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__DictLN_RootData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_RootData_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   RootData *p=NULL;
      p = new RootData((char*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__DictLN_RootData);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_Class_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((RootData*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_Class_Name_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((RootData*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_Class_Version_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((RootData*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_Dictionary_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((RootData*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_IsA_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const RootData*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_ShowMembers_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((RootData*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_Streamer_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((RootData*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_StreamerNVirtual_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((RootData*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_DeclFileName_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((RootData*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_DeclFileLine_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((RootData*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_ImplFileName_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((RootData*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RootData_ImplFileLine_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((RootData*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RootData_RootData_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   RootData *p;
   p=new RootData(*(RootData*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__DictLN_RootData);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RootData G__TRootData;
static int G__RootData_wARootData_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (RootData *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (RootData *)((G__getstructoffset())+sizeof(RootData)*i);
   else  delete (RootData *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RootPCellID */

/* RootCaloHit */

/* RootData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict() {p=&G__Sizep2memfuncDict::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_RootCaloHit))) {
     RootCaloHit *G__Lderived;
     G__Lderived=(RootCaloHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_RootCaloHit),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_RootData))) {
     RootData *G__Lderived;
     G__Lderived=(RootData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_RootData),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,
-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,
-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Seek_t",105,-1,0,
-1);
   G__setnewtype(-1,"File pointer (int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Float 8 bytes (double)",0);
   G__search_typename2("Text_t",99,-1,0,
-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",98,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (unsigned char)",0);
   G__search_typename2("Byte_t",98,-1,0,
-1);
   G__setnewtype(-1,"Byte (8 bits) (unsigned char)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,0,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Ssiz_t",105,-1,0,
-1);
   G__setnewtype(-1,"String size (int)",0);
   G__search_typename2("Real_t",102,-1,0,
-1);
   G__setnewtype(-1,"TVector and TMatrix element type (float)",0);
   G__search_typename2("Streamer_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VoidFuncPtr_t",89,-1,0,
-1);
   G__setnewtype(-1,"pointer to void function",0);
   G__search_typename2("FreeHookFun_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocFun_t",81,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocCFun_t",81,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Axis_t",100,-1,0,
-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("Stat_t",100,-1,0,
-1);
   G__setnewtype(-1,"Statistics type (double)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RootPCellID */
static void G__setup_memvarRootPCellID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_RootPCellID));
   { RootPCellID *p; p=(RootPCellID*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,99,0,0,-1,-1,-1,4,"base[4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RootCaloHit */
static void G__setup_memvarRootCaloHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_RootCaloHit));
   { RootCaloHit *p; p=(RootCaloHit*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,102,0,0,-1,-1,-1,2,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,-1,-1,2,"time=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,-1,-1,-1,2,"itra=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__DictLN_RootPCellID),-1,-1,2,"mycell=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RootData */
static void G__setup_memvarRootData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_RootData));
   { RootData *p; p=(RootData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->data)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_TClonesArray),-1,-1,1,"data=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRootPCellID(void) {
   /* RootPCellID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_RootPCellID));
   G__memfunc_setup("RootPCellID",1025,G__RootPCellID_RootPCellID_0_0,105,G__get_linked_tagnum(&G__DictLN_RootPCellID),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RootPCellID",1025,G__RootPCellID_RootPCellID_1_0,105,G__get_linked_tagnum(&G__DictLN_RootPCellID),-1,0,2,1,1,0,
"u 'string' - 11 - b h - - 0 - i",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("RootPCellID",1025,G__RootPCellID_RootPCellID_2_0,(int)('i'),G__get_linked_tagnum(&G__DictLN_RootPCellID),-1,0,1,1,1,0,"u 'RootPCellID' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~RootPCellID",1151,G__RootPCellID_wARootPCellID_3_0,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootCaloHit(void) {
   /* RootCaloHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_RootCaloHit));
   G__memfunc_setup("RootCaloHit",1096,G__RootCaloHit_RootCaloHit_0_0,105,G__get_linked_tagnum(&G__DictLN_RootCaloHit),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RootCaloHit",1096,G__RootCaloHit_RootCaloHit_1_0,105,G__get_linked_tagnum(&G__DictLN_RootCaloHit),-1,0,5,1,1,0,
"f - - 0 - e f - - 0 - t "
"i - - 0 - i u 'string' - 11 - s "
"h - - 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__RootCaloHit_Class_3_0,85,G__get_linked_tagnum(&G__DictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__RootCaloHit_Class_Name_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__RootCaloHit_Class_Version_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__RootCaloHit_Dictionary_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__RootCaloHit_IsA_7_0,85,G__get_linked_tagnum(&G__DictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__RootCaloHit_ShowMembers_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__RootCaloHit_Streamer_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootCaloHit_StreamerNVirtual_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__RootCaloHit_DeclFileName_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__RootCaloHit_DeclFileLine_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__RootCaloHit_ImplFileName_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__RootCaloHit_ImplFileLine_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("RootCaloHit",1096,G__RootCaloHit_RootCaloHit_5_1,(int)('i'),G__get_linked_tagnum(&G__DictLN_RootCaloHit),-1,0,1,1,1,0,"u 'RootCaloHit' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~RootCaloHit",1222,G__RootCaloHit_wARootCaloHit_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRootData(void) {
   /* RootData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_RootData));
   G__memfunc_setup("RootData",798,G__RootData_RootData_0_0,105,G__get_linked_tagnum(&G__DictLN_RootData),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("RootData",798,G__RootData_RootData_1_0,105,G__get_linked_tagnum(&G__DictLN_RootData),-1,0,2,1,1,0,
"C - - 0 - name h - 'UInt_t' 0 - nD",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__RootData_Class_3_0,85,G__get_linked_tagnum(&G__DictLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__RootData_Class_Name_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__RootData_Class_Version_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__RootData_Dictionary_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__RootData_IsA_7_0,85,G__get_linked_tagnum(&G__DictLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__RootData_ShowMembers_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__RootData_Streamer_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RootData_StreamerNVirtual_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__RootData_DeclFileName_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__RootData_DeclFileLine_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__RootData_ImplFileName_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__RootData_ImplFileLine_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("RootData",798,G__RootData_RootData_5_1,(int)('i'),G__get_linked_tagnum(&G__DictLN_RootData),-1,0,1,1,1,0,"u 'RootData' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~RootData",924,G__RootData_wARootData_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictLN_RootPCellID = { "RootPCellID" , 99 , -1 };
G__linked_taginfo G__DictLN_RootCaloHit = { "RootCaloHit" , 99 , -1 };
G__linked_taginfo G__DictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__DictLN_RootData = { "RootData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_TClass.tagnum = -1 ;
  G__DictLN_TObject.tagnum = -1 ;
  G__DictLN_RootPCellID.tagnum = -1 ;
  G__DictLN_RootCaloHit.tagnum = -1 ;
  G__DictLN_TClonesArray.tagnum = -1 ;
  G__DictLN_RootData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum(&G__DictLN_RootPCellID),sizeof(RootPCellID),-1,262400,(char*)NULL,G__setup_memvarRootPCellID,G__setup_memfuncRootPCellID);
   G__tagtable_setup(G__get_linked_tagnum(&G__DictLN_RootCaloHit),sizeof(RootCaloHit),-1,292096,(char*)NULL,G__setup_memvarRootCaloHit,G__setup_memfuncRootCaloHit);
   G__tagtable_setup(G__get_linked_tagnum(&G__DictLN_RootData),sizeof(RootData),-1,292096,(char*)NULL,G__setup_memvarRootData,G__setup_memfuncRootData);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

